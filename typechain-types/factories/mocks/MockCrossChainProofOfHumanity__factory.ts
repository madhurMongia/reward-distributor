/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MockCrossChainProofOfHumanity,
  MockCrossChainProofOfHumanityInterface,
} from "../../mocks/MockCrossChainProofOfHumanity";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_human",
        type: "address",
      },
    ],
    name: "humanityOf",
    outputs: [
      {
        internalType: "bytes20",
        name: "",
        type: "bytes20",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_human",
        type: "address",
      },
    ],
    name: "isHuman",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_human",
        type: "address",
      },
      {
        internalType: "bytes20",
        name: "humanityID",
        type: "bytes20",
      },
    ],
    name: "setHumanityOf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_human",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "setIsHuman",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes20",
        name: "humanityID",
        type: "bytes20",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setupHuman",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506102e28061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631e51d93e1461005c5780635818cdd7146100b25780639251842b146100eb578063e274f78f1461012d578063f72c436f1461017c575b600080fd5b6100b061006a3660046101f1565b6001600160a01b0316600090815260016020818152604080842080546001600160a01b03191660609690961c95909517909455829052919020805460ff19169091179055565b005b6100b06100c0366004610224565b6001600160a01b03919091166000908152602081905260409020805460ff1916911515919091179055565b6100b06100f9366004610260565b6001600160a01b0391909116600090815260016020526040902080546001600160a01b03191660609290921c919091179055565b61015961013b36600461028a565b6001600160a01b031660009081526001602052604090205460601b90565b6040516bffffffffffffffffffffffff1990911681526020015b60405180910390f35b6101a861018a36600461028a565b6001600160a01b031660009081526020819052604090205460ff1690565b6040519015158152602001610173565b80356bffffffffffffffffffffffff19811681146101d557600080fd5b919050565b80356001600160a01b03811681146101d557600080fd5b6000806040838503121561020457600080fd5b61020d836101b8565b915061021b602084016101da565b90509250929050565b6000806040838503121561023757600080fd5b610240836101da565b91506020830135801515811461025557600080fd5b809150509250929050565b6000806040838503121561027357600080fd5b61027c836101da565b915061021b602084016101b8565b60006020828403121561029c57600080fd5b6102a5826101da565b939250505056fea2646970667358221220796ae24e0e95bff0fe4a71a52804bf2d6878b335c8583c3e1ff412b1f03f5b1e64736f6c63430008190033";

type MockCrossChainProofOfHumanityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockCrossChainProofOfHumanityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockCrossChainProofOfHumanity__factory extends ContractFactory {
  constructor(...args: MockCrossChainProofOfHumanityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockCrossChainProofOfHumanity & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockCrossChainProofOfHumanity__factory {
    return super.connect(runner) as MockCrossChainProofOfHumanity__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockCrossChainProofOfHumanityInterface {
    return new Interface(_abi) as MockCrossChainProofOfHumanityInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockCrossChainProofOfHumanity {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockCrossChainProofOfHumanity;
  }
}
