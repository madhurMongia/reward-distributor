/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MockCrossChainProofOfHumanity,
  MockCrossChainProofOfHumanityInterface,
} from "../../mocks/MockCrossChainProofOfHumanity";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes20",
        name: "humanityID",
        type: "bytes20",
      },
    ],
    name: "boundTo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_human",
        type: "address",
      },
    ],
    name: "isHuman",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes20",
        name: "humanityID",
        type: "bytes20",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setBoundTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_human",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "setIsHuman",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes20",
        name: "humanityID",
        type: "bytes20",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setupHuman",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506102df8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631a355acb1461005c5780631e51d93e146100ac5780633dafb4481461010c5780635818cdd714610154578063f72c436f1461018d575b600080fd5b61008f61006a3660046101e6565b6001600160601b0319166000908152600160205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020015b60405180910390f35b61010a6100ba36600461021f565b6001600160601b0319909116600090815260016020818152604080842080546001600160a01b039096166001600160a01b031990961686179055938352829052919020805460ff19169091179055565b005b61010a61011a36600461021f565b6001600160601b031991909116600090815260016020526040902080546001600160a01b0319166001600160a01b03909216919091179055565b61010a610162366004610252565b6001600160a01b03919091166000908152602081905260409020805460ff1916911515919091179055565b6101b961019b36600461028e565b6001600160a01b031660009081526020819052604090205460ff1690565b60405190151581526020016100a3565b80356001600160601b0319811681146101e157600080fd5b919050565b6000602082840312156101f857600080fd5b610201826101c9565b9392505050565b80356001600160a01b03811681146101e157600080fd5b6000806040838503121561023257600080fd5b61023b836101c9565b915061024960208401610208565b90509250929050565b6000806040838503121561026557600080fd5b61026e83610208565b91506020830135801515811461028357600080fd5b809150509250929050565b6000602082840312156102a057600080fd5b6102018261020856fea2646970667358221220d898bc1d42ee2a09e5c28f3d7e0619a0deb914ce39f17f23835f80327cf8e26464736f6c63430008190033";

type MockCrossChainProofOfHumanityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockCrossChainProofOfHumanityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockCrossChainProofOfHumanity__factory extends ContractFactory {
  constructor(...args: MockCrossChainProofOfHumanityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockCrossChainProofOfHumanity & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockCrossChainProofOfHumanity__factory {
    return super.connect(runner) as MockCrossChainProofOfHumanity__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockCrossChainProofOfHumanityInterface {
    return new Interface(_abi) as MockCrossChainProofOfHumanityInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockCrossChainProofOfHumanity {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockCrossChainProofOfHumanity;
  }
}
