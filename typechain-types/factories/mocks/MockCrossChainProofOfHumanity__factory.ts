/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MockCrossChainProofOfHumanity,
  MockCrossChainProofOfHumanityInterface,
} from "../../mocks/MockCrossChainProofOfHumanity";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_human",
        type: "address",
      },
    ],
    name: "humanityOf",
    outputs: [
      {
        internalType: "bytes20",
        name: "",
        type: "bytes20",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_human",
        type: "address",
      },
    ],
    name: "isHuman",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_human",
        type: "address",
      },
      {
        internalType: "bytes20",
        name: "humanityID",
        type: "bytes20",
      },
    ],
    name: "setHumanityOf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_human",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "setIsHuman",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes20",
        name: "humanityID",
        type: "bytes20",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setupHuman",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506106bb8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631e51d93e1461005c5780635818cdd7146100785780639251842b14610094578063e274f78f146100b0578063f72c436f146100e0575b600080fd5b6100766004803603810190610071919061050c565b610110565b005b610092600480360381019061008d9190610584565b610212565b005b6100ae60048036038101906100a991906105c4565b610294565b005b6100ca60048036038101906100c59190610604565b61032b565b6040516100d79190610640565b60405180910390f35b6100fa60048036038101906100f59190610604565b6103bd565b604051610107919061066a565b60405180910390f35b610124673860a04ce17612c760c01b61044e565b61013867b6128506d4f77e9e60c01b61044e565b81600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908360601c02179055506101b767835b8352fdea732260c01b61044e565b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b610226672342b9067b54f43b60c01b61044e565b61023a678fff274491fc5ef260c01b61044e565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6102a8673f38b5ce53a330f260c01b61044e565b6102bc67e71f93a5a53be0ba60c01b61044e565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908360601c02179055505050565b600061034167d51f6690fac5aab660c01b61044e565b61035567f309c0e70bd6105260c01b61044e565b61036967b573a5beb603713560c01b61044e565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460601b9050919050565b60006103d367ce97907774eb425160c01b61044e565b6103e767f2b0e2249830d85360c01b61044e565b6103fb673f3abc848c1b42e360c01b61044e565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b50565b600080fd5b60007fffffffffffffffffffffffffffffffffffffffff00000000000000000000000082169050919050565b61048b81610456565b811461049657600080fd5b50565b6000813590506104a881610482565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104d9826104ae565b9050919050565b6104e9816104ce565b81146104f457600080fd5b50565b600081359050610506816104e0565b92915050565b6000806040838503121561052357610522610451565b5b600061053185828601610499565b9250506020610542858286016104f7565b9150509250929050565b60008115159050919050565b6105618161054c565b811461056c57600080fd5b50565b60008135905061057e81610558565b92915050565b6000806040838503121561059b5761059a610451565b5b60006105a9858286016104f7565b92505060206105ba8582860161056f565b9150509250929050565b600080604083850312156105db576105da610451565b5b60006105e9858286016104f7565b92505060206105fa85828601610499565b9150509250929050565b60006020828403121561061a57610619610451565b5b6000610628848285016104f7565b91505092915050565b61063a81610456565b82525050565b60006020820190506106556000830184610631565b92915050565b6106648161054c565b82525050565b600060208201905061067f600083018461065b565b9291505056fea2646970667358221220dbe6fe72c410da183db2874165e737a2b1cd633e8fa41cb50eec6f47c20a7e7e64736f6c63430008190033";

type MockCrossChainProofOfHumanityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockCrossChainProofOfHumanityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockCrossChainProofOfHumanity__factory extends ContractFactory {
  constructor(...args: MockCrossChainProofOfHumanityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockCrossChainProofOfHumanity & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockCrossChainProofOfHumanity__factory {
    return super.connect(runner) as MockCrossChainProofOfHumanity__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockCrossChainProofOfHumanityInterface {
    return new Interface(_abi) as MockCrossChainProofOfHumanityInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockCrossChainProofOfHumanity {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockCrossChainProofOfHumanity;
  }
}
