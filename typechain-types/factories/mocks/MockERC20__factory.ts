/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MockERC20, MockERC20Interface } from "../../mocks/MockERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_shouldFail",
        type: "bool",
      },
    ],
    name: "setTransferFromShouldFail",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_shouldFail",
        type: "bool",
      },
    ],
    name: "setTransferShouldFail",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferFromShouldFail",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "transferShouldFail",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611ab5380380611ab583398181016040528101906100329190610342565b61004c6799bdef6f02eae05d60c01b61015b60201b60201c565b61006667ee36e0ea230d83b660c01b61015b60201b60201c565b836003908161007591906105f8565b50610090672084091bcd100b2e60c01b61015b60201b60201c565b826004908161009f91906105f8565b506100ba6744759dd5ac2c8eb360c01b61015b60201b60201c565b81600560006101000a81548160ff021916908360ff1602179055506100ef6767a512231f222bda60c01b61015b60201b60201c565b8060028190555061010f66a9c62d08c18c2f60c01b61015b60201b60201c565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050506106ca565b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6101c58261017c565b810181811067ffffffffffffffff821117156101e4576101e361018d565b5b80604052505050565b60006101f761015e565b905061020382826101bc565b919050565b600067ffffffffffffffff8211156102235761022261018d565b5b61022c8261017c565b9050602081019050919050565b60005b8381101561025757808201518184015260208101905061023c565b60008484015250505050565b600061027661027184610208565b6101ed565b90508281526020810184848401111561029257610291610177565b5b61029d848285610239565b509392505050565b600082601f8301126102ba576102b9610172565b5b81516102ca848260208601610263565b91505092915050565b600060ff82169050919050565b6102e9816102d3565b81146102f457600080fd5b50565b600081519050610306816102e0565b92915050565b6000819050919050565b61031f8161030c565b811461032a57600080fd5b50565b60008151905061033c81610316565b92915050565b6000806000806080858703121561035c5761035b610168565b5b600085015167ffffffffffffffff81111561037a5761037961016d565b5b610386878288016102a5565b945050602085015167ffffffffffffffff8111156103a7576103a661016d565b5b6103b3878288016102a5565b93505060406103c4878288016102f7565b92505060606103d58782880161032d565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061043357607f821691505b602082108103610446576104456103ec565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026104ae7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610471565b6104b88683610471565b95508019841693508086168417925050509392505050565b6000819050919050565b60006104f56104f06104eb8461030c565b6104d0565b61030c565b9050919050565b6000819050919050565b61050f836104da565b61052361051b826104fc565b84845461047e565b825550505050565b600090565b61053861052b565b610543818484610506565b505050565b5b818110156105675761055c600082610530565b600181019050610549565b5050565b601f8211156105ac5761057d8161044c565b61058684610461565b81016020851015610595578190505b6105a96105a185610461565b830182610548565b50505b505050565b600082821c905092915050565b60006105cf600019846008026105b1565b1980831691505092915050565b60006105e883836105be565b9150826002028217905092915050565b610601826103e1565b67ffffffffffffffff81111561061a5761061961018d565b5b610624825461041b565b61062f82828561056b565b600060209050601f8311600181146106625760008415610650578287015190505b61065a85826105dc565b8655506106c2565b601f1984166106708661044c565b60005b8281101561069857848901518255600182019150602085019450602081019050610673565b868310156106b557848901516106b1601f8916826105be565b8355505b6001600288020188555050505b505050505050565b6113dc806106d96000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063bfb87c1c11610066578063bfb87c1c1461025f578063c0b1fd5e1461027d578063dd62ed3e14610299578063ff0a8570146102c9576100ea565b806370a08231146101e157806395d89b4114610211578063a9059cbb1461022f576100ea565b806318160ddd116100c857806318160ddd1461015957806323b872dd14610177578063313ce567146101a757806340c10f19146101c5576100ea565b806306fdde03146100ef578063095ea7b31461010d5780630cf96c3b1461013d575b600080fd5b6100f76102e7565b6040516101049190610f2c565b60405180910390f35b61012760048036038101906101229190610fe7565b610375565b6040516101349190611042565b60405180910390f35b61015760048036038101906101529190611089565b610452565b005b610161610497565b60405161016e91906110c5565b60405180910390f35b610191600480360381019061018c91906110e0565b6104dd565b60405161019e9190611042565b60405180910390f35b6101af610916565b6040516101bc919061114f565b60405180910390f35b6101df60048036038101906101da9190610fe7565b610929565b005b6101fb60048036038101906101f6919061116a565b6109d7565b60405161020891906110c5565b60405180910390f35b610219610a5b565b6040516102269190610f2c565b60405180910390f35b61024960048036038101906102449190610fe7565b610ae9565b6040516102569190611042565b60405180910390f35b610267610d6b565b6040516102749190611042565b60405180910390f35b61029760048036038101906102929190611089565b610d7e565b005b6102b360048036038101906102ae9190611197565b610dc3565b6040516102c091906110c5565b60405180910390f35b6102d1610e86565b6040516102de9190611042565b60405180910390f35b600380546102f490611206565b80601f016020809104026020016040519081016040528092919081815260200182805461032090611206565b801561036d5780601f106103425761010080835404028352916020019161036d565b820191906000526020600020905b81548152906001019060200180831161035057829003601f168201915b505050505081565b600061038b676cbb5880b31f0ba060c01b610e99565b61039f67aa7eb73466b9433c60c01b610e99565b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061043467b93083dfd72cd8cf60c01b610e99565b61044867276c1b930e3c2ef360c01b610e99565b6001905092915050565b61046667dde449f5ec0353be60c01b610e99565b61047a6785e54607851e4ba460c01b610e99565b80600560016101000a81548160ff02191690831515021790555050565b60006104ad672e7522533806c26560c01b610e99565b6104c167e53a24cd89be3bd260c01b610e99565b6104d5672c7538c11be25c3a60c01b610e99565b600254905090565b60006104f3670fff15be1a4483c760c01b610e99565b6105076761071d82bf5c093f60c01b610e99565b61051b671b2058f90f7eef8860c01b610e99565b600560029054906101000a900460ff161561057557610544675458f9dbd23e0ce260c01b610e99565b61055867c1bebf890681c35760c01b610e99565b61056c67aeeb942e10a4ab7c60c01b610e99565b6000905061090f565b61058967f931daee0f5cefd060c01b610e99565b61059d6769dda181711300d760c01b610e99565b6105b167e3dc8548e35688bb60c01b610e99565b6105c567f2458069194a873060c01b610e99565b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610646576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063d90611283565b60405180910390fd5b61065a677a35092b49109bfa60c01b610e99565b61066e672ec32533913e901360c01b610e99565b61068267a6054ab285e856ec60c01b610e99565b6106966797536e76f05a2ecf60c01b610e99565b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610755576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074c906112ef565b60405180910390fd5b61076967f38f8ea67018199860c01b610e99565b61077d67bf90db301b749be760c01b610e99565b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107cb919061133e565b925050819055506107e66715afe49825cb8a5460c01b610e99565b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108349190611372565b9250508190555061084f6746e70241bfcdd02f60c01b610e99565b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108db919061133e565b925050819055506108f66777c142694362b93d60c01b610e99565b61090a67a2ab0f76b0381b2160c01b610e99565b600190505b9392505050565b600560009054906101000a900460ff1681565b61093d67f3871f4fbb7d30ff60c01b610e99565b61095167030206f309bb749160c01b610e99565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461099f9190611372565b925050819055506109ba67e1f4bb3cf06aebd760c01b610e99565b80600260008282546109cc9190611372565b925050819055505050565b60006109ed6739db7b38e14bab0a60c01b610e99565b610a016703a5d074af09c22560c01b610e99565b610a1567cfbf92e38e9c2f4160c01b610e99565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60048054610a6890611206565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9490611206565b8015610ae15780601f10610ab657610100808354040283529160200191610ae1565b820191906000526020600020905b815481529060010190602001808311610ac457829003601f168201915b505050505081565b6000610aff6706a98d34780a0f9c60c01b610e99565b610b13675afcf1dedfe74f6760c01b610e99565b610b276736db1629d9f38a7060c01b610e99565b600560019054906101000a900460ff1615610b8157610b5067301d8f0ab5ed5ac460c01b610e99565b610b646772d7b5bf9278cbec60c01b610e99565b610b78674b6fb3d41098f34b60c01b610e99565b60009050610d65565b610b95671e80999b360d096360c01b610e99565b610ba9673a3ffde3a540321e60c01b610e99565b610bbd6769f9dec2b58bf2f460c01b610e99565b610bd167747064cac5e28bf460c01b610e99565b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4990611283565b60405180910390fd5b610c666730e9b824df1de61160c01b610e99565b610c7a67ac2e1e2fe32611f760c01b610e99565b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cc8919061133e565b92505081905550610ce36781771c940751a43e60c01b610e99565b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d319190611372565b92505081905550610d4c678778a26033c149b660c01b610e99565b610d6067992cf8d9db272ce560c01b610e99565b600190505b92915050565b600560029054906101000a900460ff1681565b610d9267ea785dc350d3bfc160c01b610e99565b610da66738fca8da4b623c1860c01b610e99565b80600560026101000a81548160ff02191690831515021790555050565b6000610dd9672d2b2fa1b26fe0a860c01b610e99565b610ded677a2d85aab3c9d67060c01b610e99565b610e0167451e615e60683f4660c01b610e99565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600560019054906101000a900460ff1681565b50565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ed6578082015181840152602081019050610ebb565b60008484015250505050565b6000601f19601f8301169050919050565b6000610efe82610e9c565b610f088185610ea7565b9350610f18818560208601610eb8565b610f2181610ee2565b840191505092915050565b60006020820190508181036000830152610f468184610ef3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f7e82610f53565b9050919050565b610f8e81610f73565b8114610f9957600080fd5b50565b600081359050610fab81610f85565b92915050565b6000819050919050565b610fc481610fb1565b8114610fcf57600080fd5b50565b600081359050610fe181610fbb565b92915050565b60008060408385031215610ffe57610ffd610f4e565b5b600061100c85828601610f9c565b925050602061101d85828601610fd2565b9150509250929050565b60008115159050919050565b61103c81611027565b82525050565b60006020820190506110576000830184611033565b92915050565b61106681611027565b811461107157600080fd5b50565b6000813590506110838161105d565b92915050565b60006020828403121561109f5761109e610f4e565b5b60006110ad84828501611074565b91505092915050565b6110bf81610fb1565b82525050565b60006020820190506110da60008301846110b6565b92915050565b6000806000606084860312156110f9576110f8610f4e565b5b600061110786828701610f9c565b935050602061111886828701610f9c565b925050604061112986828701610fd2565b9150509250925092565b600060ff82169050919050565b61114981611133565b82525050565b60006020820190506111646000830184611140565b92915050565b6000602082840312156111805761117f610f4e565b5b600061118e84828501610f9c565b91505092915050565b600080604083850312156111ae576111ad610f4e565b5b60006111bc85828601610f9c565b92505060206111cd85828601610f9c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061121e57607f821691505b602082108103611231576112306111d7565b5b50919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b600061126d601483610ea7565b915061127882611237565b602082019050919050565b6000602082019050818103600083015261129c81611260565b9050919050565b7f496e73756666696369656e7420616c6c6f77616e636500000000000000000000600082015250565b60006112d9601683610ea7565b91506112e4826112a3565b602082019050919050565b60006020820190508181036000830152611308816112cc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061134982610fb1565b915061135483610fb1565b925082820390508181111561136c5761136b61130f565b5b92915050565b600061137d82610fb1565b915061138883610fb1565b92508282019050808211156113a05761139f61130f565b5b9291505056fea2646970667358221220bec7afc20ab8dab4ac0eb88481849f677b0b9c6e55b157dfce406f0c2779ccca64736f6c63430008190033";

type MockERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC20__factory extends ContractFactory {
  constructor(...args: MockERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      _initialSupply,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      _initialSupply,
      overrides || {}
    ) as Promise<
      MockERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockERC20__factory {
    return super.connect(runner) as MockERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC20Interface {
    return new Interface(_abi) as MockERC20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockERC20 {
    return new Contract(address, _abi, runner) as unknown as MockERC20;
  }
}
