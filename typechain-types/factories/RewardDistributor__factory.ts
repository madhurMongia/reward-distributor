/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  RewardDistributor,
  RewardDistributorInterface,
} from "../RewardDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountPerClaim",
        type: "uint256",
      },
      {
        internalType: "contract ICrossChainProofOfHumanity",
        name: "_crossChainProofOfHumanity",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes20",
        name: "humanityID",
        type: "bytes20",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "amountPerClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes20",
        name: "",
        type: "bytes20",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "crossChainProofOfHumanity",
    outputs: [
      {
        internalType: "contract ICrossChainProofOfHumanity",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b5060405161083f38038061083f83398101604081905261002f91610076565b6001600160a01b0392831660805260a091909152600080546001600160a01b031916331790551660c0526100b9565b6001600160a01b038116811461007357600080fd5b50565b60008060006060848603121561008b57600080fd5b83516100968161005e565b6020850151604086015191945092506100ae8161005e565b809150509250925092565b60805160a05160c05161072f6101106000396000818160cc015281816102e201526103a50152600081816092015281816104b201526105530152600081816101810152818161021701526104d8015261072f6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80634e71d92d1161005b5780634e71d92d1461014e5780638da5cb5b14610156578063f2fde38b14610169578063fc0c546a1461017c57600080fd5b8063013d88471461008d57806302c69ac8146100c75780632e1a7d4d14610106578063475898f51461011b575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100ee7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100be565b61011961011436600461063b565b6101a3565b005b61013e61012936600461066d565b60016020526000908152604090205460ff1681565b60405190151581526020016100be565b6101196102cd565b6000546100ee906001600160a01b031681565b610119610177366004610691565b6105aa565b6100ee7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031633146101ee5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b60005460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610262573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028691906106ba565b506000546040518281526001600160a01b03909116907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a250565b60405163f72c436f60e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f72c436f90602401602060405180830381865afa158015610331573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035591906106ba565b61038d5760405162461bcd60e51b81526020600482015260096024820152683737ba10343ab6b0b760b91b60448201526064016101e5565b60405163e274f78f60e01b81523360048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e274f78f90602401602060405180830381865afa1580156103f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041891906106dc565b6001600160601b0319811660009081526001602052604090205490915060ff16156104775760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e4818db185a5b5959608a1b60448201526064016101e5565b6001600160601b03198116600090815260016020819052604091829020805460ff191690911790555163a9059cbb60e01b81523360048201527f000000000000000000000000000000000000000000000000000000000000000060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054d91906106ba565b506040517f000000000000000000000000000000000000000000000000000000000000000081526001600160601b03198216907ff9f8da45022b175812f61e1203d83ce02d97a24b0145b7fdac6b617ac3887c42906020016102c2565b6000546001600160a01b031633146105f05760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064016101e5565b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b60006020828403121561064d57600080fd5b5035919050565b6001600160601b03198116811461066a57600080fd5b50565b60006020828403121561067f57600080fd5b813561068a81610654565b9392505050565b6000602082840312156106a357600080fd5b81356001600160a01b038116811461068a57600080fd5b6000602082840312156106cc57600080fd5b8151801515811461068a57600080fd5b6000602082840312156106ee57600080fd5b815161068a8161065456fea2646970667358221220b065f7e2b8b2078e163ff48c2748a7ee37ce7e715364da1e2bf09ce6add248d264736f6c63430008190033";

type RewardDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardDistributor__factory extends ContractFactory {
  constructor(...args: RewardDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    _amountPerClaim: BigNumberish,
    _crossChainProofOfHumanity: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _token,
      _amountPerClaim,
      _crossChainProofOfHumanity,
      overrides || {}
    );
  }
  override deploy(
    _token: AddressLike,
    _amountPerClaim: BigNumberish,
    _crossChainProofOfHumanity: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _token,
      _amountPerClaim,
      _crossChainProofOfHumanity,
      overrides || {}
    ) as Promise<
      RewardDistributor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RewardDistributor__factory {
    return super.connect(runner) as RewardDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardDistributorInterface {
    return new Interface(_abi) as RewardDistributorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RewardDistributor {
    return new Contract(address, _abi, runner) as unknown as RewardDistributor;
  }
}
